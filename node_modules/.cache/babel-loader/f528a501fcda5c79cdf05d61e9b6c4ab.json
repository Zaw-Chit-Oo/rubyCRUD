{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ruby Study\\\\outline-create-too-mdy_nodocker\\\\app\\\\javascript\\\\components\\\\users\\\\_reg_form.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { Component, useState } from \"react\"; // import { Table, Popconfirm, Input, Button, Space } from \"antd\";\n\nimport { Form, Input, Button, Modal } from \"antd\"; // import { EditTwoTone, DeleteOutlined, SearchOutlined } from \"@ant-design/icons\";\n// import I18n from \"i18n-js\";\n\nvar layout = {\n  labelCol: {\n    span: 10\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nvar RegistrationForm = function RegistrationForm(props) {\n  var onFinish = props.onFinish,\n      onFinishLogin = props.onFinishLogin;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setIsModalVisible = _useState2[1]; // const onFinish = (values) => {\n  //   console.log(\"Success:\", values);\n  // };\n\n\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n\n  var handleOk = function handleOk() {\n    setIsModalVisible(false);\n  };\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  };\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  var onReset = function onReset() {\n    form.resetFields();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"block\",\n      width: 400,\n      marginLeft: 250\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    form: form,\n    name: \"basic\" //   labelCol={{ span: 8 }}\n    //   wrapperCol={{ span: 16 }}\n    ,\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Username\",\n    name: \"user_name\",\n    rules: [{\n      required: true,\n      message: \"Please input your username!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      required: true,\n      type: \"email\",\n      message: \"Please input your email!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"Please input your password!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n      offset: 8\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      marginLeft: 5\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      // marginLeft: 30,\n      marginLeft: 5,\n      background: \"#8c8c8c\",\n      borderColor: \"#8c8c8c\"\n    },\n    type: \"primary\",\n    htmlType: \"button\",\n    onClick: onReset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      // marginLeft: 30,\n      marginLeft: 5,\n      background: \"#5b8c00\",\n      borderColor: \"#5b8c00\"\n    },\n    type: \"primary\",\n    htmlType: \"button\",\n    onClick: showModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Login\",\n    visible: isModalVisible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    name: \"basic\",\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinishLogin,\n    onFinishFailed: onFinishFailed,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      required: true,\n      type: \"email\",\n      message: \"Please input your email!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"Please input your password!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      // marginLeft: 30,\n      marginLeft: 5,\n      background: \"#8c8c8c\",\n      borderColor: \"#8c8c8c\"\n    },\n    type: \"primary\",\n    htmlType: \"button\" // onClick={form.resetFields()}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Clear\")))));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["D:/Ruby Study/outline-create-too-mdy_nodocker/app/javascript/components/users/_reg_form.jsx"],"names":["React","Component","useState","Form","Input","Button","Modal","layout","labelCol","span","wrapperCol","RegistrationForm","props","onFinish","onFinishLogin","useForm","form","isModalVisible","setIsModalVisible","showModal","handleOk","handleCancel","onFinishFailed","errorInfo","console","log","onReset","resetFields","display","width","marginLeft","remember","required","message","type","offset","background","borderColor"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\n// import { Table, Popconfirm, Input, Button, Space } from \"antd\";\r\nimport { Form, Input, Button, Modal } from \"antd\";\r\n// import { EditTwoTone, DeleteOutlined, SearchOutlined } from \"@ant-design/icons\";\r\n// import I18n from \"i18n-js\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 10 },\r\n  wrapperCol: { span: 14 },\r\n};\r\n\r\nconst RegistrationForm = (props) => {\r\n  const { onFinish, onFinishLogin } = props;\r\n  const [form] = Form.useForm();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  // const onFinish = (values) => {\r\n  //   console.log(\"Success:\", values);\r\n  // };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"block\",\r\n        width: 400,\r\n        marginLeft: 250,\r\n      }}\r\n    >\r\n      <Form\r\n        {...layout}\r\n        form={form}\r\n        name=\"basic\"\r\n        //   labelCol={{ span: 8 }}\r\n        //   wrapperCol={{ span: 16 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"user_name\"\r\n          rules={[{ required: true, message: \"Please input your username!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n              message: \"Please input your email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item> */}\r\n\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" style={{ marginLeft: 5 }} htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              // marginLeft: 30,\r\n              marginLeft: 5,\r\n              background: \"#8c8c8c\",\r\n              borderColor: \"#8c8c8c\",\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"button\"\r\n            onClick={onReset}\r\n          >\r\n            Clear\r\n          </Button>\r\n\r\n          <Button\r\n            style={{\r\n              // marginLeft: 30,\r\n              marginLeft: 5,\r\n              background: \"#5b8c00\",\r\n              borderColor: \"#5b8c00\",\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"button\"\r\n            onClick={showModal}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Modal\r\n        title=\"Login\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinishLogin}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: \"email\",\r\n                message: \"Please input your email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Login\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                // marginLeft: 30,\r\n                marginLeft: 5,\r\n                background: \"#8c8c8c\",\r\n                borderColor: \"#8c8c8c\",\r\n              }}\r\n              type=\"primary\"\r\n              htmlType=\"button\"\r\n              // onClick={form.resetFields()}\r\n            >\r\n              Clear\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n"]},"metadata":{},"sourceType":"module"}