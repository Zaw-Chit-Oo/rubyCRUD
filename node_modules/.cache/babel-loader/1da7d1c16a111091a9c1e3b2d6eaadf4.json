{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ruby Study\\\\outline-create-too-mdy_nodocker\\\\app\\\\javascript\\\\components\\\\customers\\\\_table.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Table, Popconfirm } from 'antd';\nimport { EditTwoTone, DeleteOutlined } from '@ant-design/icons';\nimport I18n from \"i18n-js\"; // const data = [\n//     {\n//       key: '1',\n//       name: 'John Brown',\n//       age: 32,\n//       email: 'jb@gmail.com',\n//       address: 'New York No. 1 Lake Park',\n//       order_item: 'T_Shirt',\n//     //   tags: ['nice', 'developer'],\n//     },\n//     {\n//       key: '2',\n//       name: 'Jim Green',\n//       age: 42,\n//       email: 'jg@gmail.com',\n//       address: 'London No. 1 Lake Park',\n//       order_item: 'T_Shirt',\n//     //   tags: ['loser'],\n//     },\n//     {\n//       key: '3',\n//       name: 'Joe Black',\n//       age: 32,\n//       email: 'jbl@gmail.com',\n//       address: 'Sidney No. 1 Lake Park',\n//       order_item: 'T_Shirt',\n//     //   tags: ['cool', 'teacher'],\n//     },\n//   ];\n\nvar CustomerTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomerTable, _React$Component);\n\n  var _super = _createSuper(CustomerTable);\n\n  function CustomerTable(props) {\n    var _this;\n\n    _classCallCheck(this, CustomerTable);\n\n    _this = _super.call(this, props);\n\n    _this.onEditCustomer = function (id) {\n      alert(id);\n      console.log(id);\n    };\n\n    _this.deleteCustomer = function (id) {\n      var url = \"api/v1/customers/\".concat(id);\n      fetch(url, {\n        method: \"delete\"\n      }).then(function (response) {\n        // if (data.ok) {\n        //   this.reloadBeers();\n        //   return data.json();\n        // }\n        // throw new Error(\"Network error.\");\n        // location.href = '/customers';\n        message.success('Customer deleted successful!'); // console.log('Deleted Ok');\n      })[\"catch\"](function (err) {\n        return message.error(\"Error: \" + err);\n      });\n    };\n\n    _this.state = {\n      customers: []\n    };\n    return _this;\n  }\n\n  _createClass(CustomerTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"api/v1/customers.json\").then(function (response) {\n        // console.log(response.data);\n        var data = response.data;\n        data.forEach(function (element) {\n          var customerData = {\n            key: element.id,\n            id: element.id,\n            name: element.name,\n            age: element.age,\n            email: element.email,\n            address: element.address,\n            order_item: element.order_item,\n            remark: element.remark\n          };\n\n          _this2.setState(function (prevState) {\n            return {\n              customers: [].concat(_toConsumableArray(prevState.customers), [customerData])\n            };\n          });\n        });\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var columns = [{\n        title: I18n.t(\"customer.id\"),\n        dataIndex: 'id',\n        key: 'number' // render: text => <a>{text}</a>,\n\n      }, {\n        title: I18n.t(\"customer.customerName\"),\n        dataIndex: 'name',\n        key: 'name' // render: text => <a>{text}</a>,\n\n      }, {\n        title: I18n.t(\"customer.age\"),\n        dataIndex: 'age',\n        key: 'age'\n      }, {\n        title: I18n.t(\"customer.email\"),\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: I18n.t(\"customer.address\"),\n        dataIndex: 'address',\n        key: 'address'\n      }, {\n        title: I18n.t(\"customer.orderItem\"),\n        dataIndex: 'order_item',\n        key: 'order_item'\n      }, // {\n      //   title: 'Action',\n      //   key: 'action',\n      //   render: (text, record) => (\n      //     <Space size=\"middle\">\n      //       {/* <a>Invite {record.name}</a> */}\n      //       <a>Edit</a>\n      //       <a>Delete</a>\n      //     </Space>\n      //   ),\n      // },\n      {\n        title: I18n.t(\"customer.action\"),\n        key: \"action\",\n        render: function render(_text, record) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EditTwoTone, {\n            style: {\n              marginLeft: 50\n            },\n            onClick: function onClick() {\n              return _this3.onEditCustomer(record.id);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(Popconfirm, {\n            title: \"Are you sure to delete this customer?\",\n            onConfirm: function onConfirm() {\n              return _this3.deleteCustomer(record.id);\n            },\n            okText: \"Yes\",\n            okType: \"danger\",\n            cancelText: \"No\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n            style: {\n              color: \"red\",\n              marginLeft: 12\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }\n          })));\n        }\n      }]; ////const data = this.state.customers;\n      ////console.log(data);\n      //  const datasource = \n      //    { data.map((customer, index) => { \n      //     [\n      //       {\n      //         key: {customer.id},\n      //         number: {customer.item.title} -{\" \"},\n      //         name: 32,\n      //         price: 'NGN' {customer.item.price} ,\n      //         quantity: {customer.quantity},\n      //       },\n      //     ];\n      //    })\n      //   };\n\n      return /*#__PURE__*/React.createElement(Table, {\n        columns: columns,\n        dataSource: this.state.customers // dataSource={datasource}\n        ,\n        bordered: true,\n        pagination: {\n          pageSize: 5,\n          showSizeChanger: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return CustomerTable;\n}(React.Component);\n\n;\nexport default CustomerTable;","map":{"version":3,"sources":["D:/Ruby Study/outline-create-too-mdy_nodocker/app/javascript/components/customers/_table.jsx"],"names":["React","Component","axios","Table","Popconfirm","EditTwoTone","DeleteOutlined","I18n","CustomerTable","props","onEditCustomer","id","alert","console","log","deleteCustomer","url","fetch","method","then","response","message","success","err","error","state","customers","get","data","forEach","element","customerData","key","name","age","email","address","order_item","remark","setState","prevState","columns","title","t","dataIndex","render","_text","record","marginLeft","color","pageSize","showSizeChanger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Popconfirm  } from 'antd';\r\nimport { EditTwoTone, DeleteOutlined } from '@ant-design/icons'\r\nimport I18n from \"i18n-js\";\r\n  \r\n// const data = [\r\n//     {\r\n//       key: '1',\r\n//       name: 'John Brown',\r\n//       age: 32,\r\n//       email: 'jb@gmail.com',\r\n//       address: 'New York No. 1 Lake Park',\r\n//       order_item: 'T_Shirt',\r\n//     //   tags: ['nice', 'developer'],\r\n//     },\r\n//     {\r\n//       key: '2',\r\n//       name: 'Jim Green',\r\n//       age: 42,\r\n//       email: 'jg@gmail.com',\r\n//       address: 'London No. 1 Lake Park',\r\n//       order_item: 'T_Shirt',\r\n//     //   tags: ['loser'],\r\n//     },\r\n//     {\r\n//       key: '3',\r\n//       name: 'Joe Black',\r\n//       age: 32,\r\n//       email: 'jbl@gmail.com',\r\n//       address: 'Sidney No. 1 Lake Park',\r\n//       order_item: 'T_Shirt',\r\n//     //   tags: ['cool', 'teacher'],\r\n//     },\r\n//   ];\r\n\r\nclass CustomerTable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: []\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"api/v1/customers.json\")\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        const data = response.data;\r\n        data.forEach((element) => {\r\n          const customerData = {\r\n            key: element.id,\r\n            id: element.id,\r\n            name: element.name,\r\n            age: element.age,\r\n            email: element.email,\r\n            address: element.address,\r\n            order_item: element.order_item,\r\n            remark: element.remark\r\n          };\r\n\r\n          this.setState((prevState) => ({\r\n            customers: [...prevState.customers, customerData],\r\n        }));\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  onEditCustomer = (id) => {\r\n      alert(id);\r\n      console.log(id);\r\n  };\r\n\r\n  deleteCustomer = (id) => {\r\n    const url = `api/v1/customers/${id}`;\r\n  \r\n    fetch(url, {\r\n      method: \"delete\",\r\n    })\r\n      .then((response) => {\r\n        // if (data.ok) {\r\n        //   this.reloadBeers();\r\n        //   return data.json();\r\n        // }\r\n        // throw new Error(\"Network error.\");\r\n        // location.href = '/customers';\r\n        message.success('Customer deleted successful!');\r\n        \r\n        // console.log('Deleted Ok');\r\n      })\r\n      .catch((err) => message.error(\"Error: \" + err));\r\n  };\r\n\r\n\r\n    render() { \r\n\r\n\r\n      const columns = [\r\n        {\r\n          title: I18n.t(\"customer.id\"),\r\n          dataIndex: 'id',\r\n          key: 'number',\r\n          // render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n          title: I18n.t(\"customer.customerName\"),\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          // render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n          title: I18n.t(\"customer.age\"),\r\n          dataIndex: 'age',\r\n          key: 'age',\r\n        },\r\n        {\r\n          title: I18n.t(\"customer.email\"),\r\n          dataIndex: 'email',\r\n          key: 'email',\r\n        },\r\n        {\r\n          title: I18n.t(\"customer.address\"),\r\n          dataIndex: 'address',\r\n          key: 'address',\r\n        },\r\n        {\r\n          title: I18n.t(\"customer.orderItem\"),\r\n          dataIndex: 'order_item',\r\n          key: 'order_item',\r\n        },\r\n        // {\r\n        //   title: 'Action',\r\n        //   key: 'action',\r\n        //   render: (text, record) => (\r\n        //     <Space size=\"middle\">\r\n        //       {/* <a>Invite {record.name}</a> */}\r\n        //       <a>Edit</a>\r\n        //       <a>Delete</a>\r\n        //     </Space>\r\n        //   ),\r\n        // },\r\n        {\r\n          title: I18n.t(\"customer.action\"),\r\n          key: \"action\",\r\n          render: (_text, record) => (\r\n            <>\r\n            <EditTwoTone style={{marginLeft: 50}} onClick={() => this.onEditCustomer(record.id)}/>\r\n            <Popconfirm title=\"Are you sure to delete this customer?\" \r\n            onConfirm={() => this.deleteCustomer(record.id)} \r\n            okText=\"Yes\"\r\n            okType=\"danger\" \r\n            cancelText=\"No\"\r\n            >\r\n              {/* <a href=\"#\" type=\"danger\">\r\n                Delete{\" \"}\r\n              </a> */}\r\n              <DeleteOutlined style={{ color: \"red\", marginLeft: 12}}/>\r\n            </Popconfirm>\r\n           \r\n            </>\r\n          ),\r\n          \r\n        },\r\n    ];\r\n\r\n    ////const data = this.state.customers;\r\n    ////console.log(data);\r\n    //  const datasource = \r\n    //    { data.map((customer, index) => { \r\n    //     [\r\n    //       {\r\n    //         key: {customer.id},\r\n    //         number: {customer.item.title} -{\" \"},\r\n    //         name: 32,\r\n    //         price: 'NGN' {customer.item.price} ,\r\n    //         quantity: {customer.quantity},\r\n    //       },\r\n    //     ];\r\n    //    })\r\n    //   };\r\n\r\n   \r\n\r\n        return (\r\n        <Table \r\n          columns={columns} \r\n          dataSource={this.state.customers} \r\n          // dataSource={datasource}\r\n          bordered \r\n          pagination={{ pageSize: 5, showSizeChanger: false }} \r\n        />\r\n        )\r\n    }\r\n};\r\n \r\nexport default CustomerTable;"]},"metadata":{},"sourceType":"module"}